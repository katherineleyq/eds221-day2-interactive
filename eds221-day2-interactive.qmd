---
title: "eds221-day2-interactive - (actually day3)"
author: "Kat Le"
execute:
    warning: FALSE
---

## Conditional statement

```{r}
temperature <- 98.2

if (temperature > 97) {
  print("Temperature warning") 
} else {
    print("No temperature warning")
  }
```

Create an if else statement for blue whale lengths. Create a variable blue whale, which has a value of 40. Add an if else statement that returns "GIANT" if the length exceeds 35, "MEDIUM" if the length is between 20 and 35, or "SMALL" if the length is \<= 20.

```{r}
whale_length <- 40

if (whale_length > 35) {
  print("GIANT")
} else if (whale_length >= 20 & whale_length <= 35) {
  print("MEDIUM")
} else if (whale_length <= 20) {
  print("SMALL")
}
```

## Switch statement

```{r}
housing_type <- "single"

switch(housing_type,
       "single" = print(400),
       "double" = print(750),
       "whole" = print(1100))

# this is the same as the code right above
if (housing_type == "whole") {
  print("1100")
} else if (housing_type == "double") {
  print("700")
} else if (housing_type == "single") {
  print("400")
}
```

## For loops

```{r}
height <- c(58, 61, 65, 72, 89, 94)

for (i in seq_along(height)) {
  half_height = height[i] / 2
  print(half_height)
}

# for each value in height vector, return the sum of the value + the one right after it

for (i in seq_along(height)) {
  consecutive_sum = height[i] + height[i+1]
  print(consecutive_sum)
}


#to get rid of NA
for (i in seq(1:(length(height)-1)) {
  consecutive_sum = height[i] + height[i+1]
  print(consecutive_sum)
}


# write a for loop that calculates the value of height for each element divided by the mean of the entire height vector

for (i in seq_along(height)) {
  new_height = height[i] / mean(height)
  print(new_height)
}
```

```{r}
# class activity
mean_mtcars <- vector(mode = "numeric", length = ncol(mtcars))

for (i in seq_along(mtcars)) {
  mean_val <- mean(mtcars[[i]], na.rm = TRUE)
  mean_mtcars[i] <- mean_val
}
```

# Conditional practice

Write a for loop with a conditional (if) statement that returns the means of all NUMERIC variables in the penguins dataset.

-   is.numeric

```{r}
library(palmerpenguins)

mean_penguins <- vector(mode = "numeric", length = ncol(penguins))

for (i in seq_along(penguins)) {
  if (is.numeric(penguins[[i]])) {
  mean_value <- mean(mean_penguins[[i]], na.rm = TRUE)
  mean_penguins[i] <- mean_value
  }
}

## allison's answer. your answer above would be wrong because not every column will be a numeric class - you need to skip over other classes.
for (i in seq_along(penguins)) {
  if (is.numeric(penguins[[i]])) {
    penguins_mean <- mean(penguins[[i]], na.rm = TRUE)
    print(penguins_mean)
  }
}
```
